{"version":3,"sources":["components/debt_row.jsx","components/debt_form.jsx","components/debt_table.jsx","App.js","index.js"],"names":["DebtRow","debt","checked","handleToggleCheck","checkedClass","type","onChange","className","creditorName","firstName","lastName","parseFloat","minPaymentPercentage","toFixed","balance","handleChange","setState","e","preventDefault","target","value","DebtForm","addDebt","useState","setCreditorName","setFirstName","setLastName","setMinPaymentPercentage","setBalance","onClick","forEach","setter","placeholder","DebtTable","debts","setDebts","checkedStates","setCheckedStates","useEffect","fetch","then","res","json","data","newCheckedStates","Array","length","fill","i","from","debtRows","rowsChecked","totalBalance","push","key","slice","concat","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06d2cb97.chunk.js","sourcesContent":["import React from 'react'\n\nconst DebtRow = ({ debt, checked, handleToggleCheck }) => {\n  const checkedClass = checked ? \"\" : \"unchecked\"\n  \n  return (\n    <>\n      <input type=\"checkbox\" \n        checked={checked}\n        onChange={handleToggleCheck} />\n\n      <div className={checkedClass}>\n        {debt.creditorName}\n      </div>\n      <div className={checkedClass}>\n        {debt.firstName}\n      </div>\n      <div className={checkedClass}>\n        {debt.lastName}\n      </div>\n      <div className={checkedClass + \" min-pay-percent right-align\"}>\n        {parseFloat(debt.minPaymentPercentage).toFixed(2)}\n      </div>\n      <div className={checkedClass + \" balance right-align\"}>\n        {parseFloat(debt.balance).toFixed(2)}\n      </div>\n    </>\n  )\n}\n\nexport default DebtRow;","import React, { useState } from 'react'\n\nconst handleChange = (setState) => (e) => {\n  e.preventDefault()\n  setState(e.target.value)\n}\n\nconst DebtForm = ({ addDebt }) => {\n  const [ creditorName, setCreditorName ] = useState(\"\")\n  const [ firstName, setFirstName ] = useState(\"\")\n  const [ lastName, setLastName ] = useState(\"\")\n  const [ minPaymentPercentage, setMinPaymentPercentage ] = useState(\"\")\n  const [ balance, setBalance ] = useState(\"\")\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    addDebt({\n      creditorName,\n      firstName,\n      lastName,\n      minPaymentPercentage: minPaymentPercentage || 0,\n      balance: balance || 0\n    })\n    const setters = [setCreditorName, setFirstName, setLastName, setMinPaymentPercentage, setBalance]\n    setters.forEach(setter => setter(\"\"))\n  }\n\n  return (\n    <>\n      <button onClick={handleSubmit}>\n        Add Debt\n      </button>\n\n      <input type=\"text\" \n        placeholder=\"AMEX\"\n        value={creditorName} \n        onChange={handleChange(setCreditorName)} />\n        \n      <input type=\"text\"\n        placeholder=\"Suman\"\n        value={firstName} \n        onChange={handleChange(setFirstName)} />\n        \n      <input type=\"text\"\n        placeholder=\"Tester79\"\n        value={lastName} \n        onChange={handleChange(setLastName)} />\n        \n      <input type=\"number\"\n        placeholder=\"2.50\"\n        value={minPaymentPercentage} \n        onChange={handleChange(setMinPaymentPercentage)} />\n        \n      <input type=\"number\"\n        placeholder=\"1200.00\"\n        value={balance} \n        onChange={handleChange(setBalance)} />\n        \n    </>\n  )\n}\n\nexport default DebtForm","import React, { useState, useEffect } from 'react'\nimport DebtRow from './debt_row'\nimport DebtForm from './debt_form'\nimport '../style/debt_table.css'\n\n\nconst DebtTable = () => {\n  const [ debts, setDebts ] = useState([])\n  const [checkedStates, setCheckedStates] = useState([])\n\n  useEffect(() => {\n    const url = \"https://raw.githubusercontent.com/StrategicFS/Recruitment/master/data.json\"\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        const newCheckedStates = Array(data.length)\n        newCheckedStates.fill(true)\n        setCheckedStates(newCheckedStates)\n        setDebts(data)\n      })\n  }, [])\n\n  const addDebt = (debt) => {\n    setCheckedStates(checkedStates.concat([true]))\n    setDebts(debts.concat([debt]))\n  }\n\n  const handleRemoveDebt = (e) => {\n    e.preventDefault()\n    setCheckedStates(checkedStates.slice(0, checkedStates.length-1))\n    setDebts(debts.slice(0, debts.length-1))\n  }\n\n  const handleToggleAllChecks = (e) => {\n    const newCheckedStates = Array(checkedStates.length)\n    newCheckedStates.fill(e.target.checked)\n    setCheckedStates(newCheckedStates) \n  }\n\n  const handleToggleCheck = (i) => (e) => {\n    const newCheckedStates = Array.from(checkedStates)\n    newCheckedStates[i] = e.target.checked\n    setCheckedStates(newCheckedStates) \n  }\n\n  let debtRows = [];\n  let rowsChecked = 0;\n  let totalBalance = 0;\n\n  debts.forEach((debt, i) => {\n    debtRows.push(\n      <DebtRow\n        key={i}\n        debt={debt}\n        checked={checkedStates[i]}\n        handleToggleCheck={handleToggleCheck(i)} />\n    )\n\n    if (checkedStates[i]) {\n      rowsChecked += 1\n      totalBalance += parseFloat(debt.balance)\n    }\n  })\n\n  return (\n    <div className=\"debt-table\">\n      <div className=\"debt-table-grid\">\n        <input type=\"checkbox\" \n          checked={rowsChecked === debts.length} \n          onChange={handleToggleAllChecks} />\n\n        <div className=\"debt-table-header\">\n          Creditor\n        </div>\n        <div className=\"debt-table-header\">\n          First Name\n        </div>\n        <div className=\"debt-table-header\">\n          Last Name\n        </div>\n        <div className=\"debt-table-header right-align\">\n          Min Pay%\n        </div>\n        <div className=\"debt-table-header right-align\">\n          Balance\n        </div>\n\n        {debtRows}\n\n        <button onClick={handleRemoveDebt}>\n          Remove Debt\n        </button>\n        <span className=\"grid-col-2-7\"></span>\n\n        <DebtForm addDebt={addDebt} />\n\n        <div className=\"debt-table-total right-align\">\n          Total\n        </div>\n        <div className=\"debt-table-total balance right-align grid-col-2-7\">\n          {totalBalance.toFixed(2)}\n        </div>\n      </div>\n\n      <footer className=\"debt-table-footer\">\n        <span>\n          Total Row Count: {debts.length}\n        </span>\n        <span>\n          Check Row Count: {rowsChecked}\n        </span>\n      </footer>\n    </div>\n  )\n}\n\nexport default DebtTable","import React from 'react';\nimport DebtTable from './components/debt_table'\n\nconst App = () => {\n  return (\n    <DebtTable />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}